####################
# GZIP COMPRESSION #
####################

<Directory "...">
 AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript
</Directory>




    # Serve gzip compressed CSS files if they exist 
    # and the client accepts gzip.
    RewriteCond "%{HTTP:Accept-encoding}" "gzip"
    RewriteCond "%{REQUEST_FILENAME}\.gz" -s
    RewriteRule "^(.*)\.css" "$1\.css\.gz" [QSA]

    # Serve gzip compressed JS files if they exist 
    # and the client accepts gzip.
    RewriteCond "%{HTTP:Accept-encoding}" "gzip"
    RewriteCond "%{REQUEST_FILENAME}\.gz" -s
    RewriteRule "^(.*)\.js" "$1\.js\.gz" [QSA]


    # Serve correct content types, and prevent mod_deflate double gzip.
    RewriteRule "\.css\.gz$" "-" [T=text/css,E=no-gzip:1]
    RewriteRule "\.js\.gz$" "-" [T=text/javascript,E=no-gzip:1]


   
      # Serve correct encoding type.
      Header append Content-Encoding gzip

      # Force proxies to cache gzipped & 
      # non-gzipped css/js files separately.
      Header append Vary Accept-Encoding
      
      AllowOverride All
      RewriteEngine On
      # This will enable the Rewrite capabilities

      RewriteCond %{HTTPS} !=on
      # This checks to make sure the connection is not already HTTPS

      RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R,L]
      # This rule will redirect users from their original location, to the same location but using HTTPS.
      # i.e.  http://www.example.com/foo/ to https://www.example.com/foo/
      # The leading slash is made optional so that this will work either in httpd.conf
      # or .htaccess context